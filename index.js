/*
 * ðŸ‘‰ : moves the memory pointer to the next cell
 * ðŸ‘ˆ : moves the memory pointer to the previous cell
 * ðŸ‘† : increment the memory cell at the current position
 * ðŸ‘‡ : decreases the memory cell at the current position.
 * ðŸ¤œ : if the memory cell at the current position is 0, jump just after the corresponding ðŸ¤›
 * ðŸ¤› : if the memory cell at the current position is not 0, jump just after the corresponding ðŸ¤œ
 * ðŸ‘Š : Display the current character represented by the ASCII code defined by the current position.
 */
const MIN_CELL = 0;
const MAX_CELL = 255;

function translate (input) {
    const AOS = Array.from(input);
    let pointer = 0;
    let memory = [0];
    let indexMemory = 0;
    let output = '';
    for (let i = 0; i < AOS.length; i++) {
        switch(AOS[i]) {
            case 'ðŸ‘‰': pointer++; break;
            case 'ðŸ‘ˆ': pointer--; break;
            case 'ðŸ‘†': memory[indexMemory] = pointer; indexMemory++; break;
            case 'ðŸ‘‡': memory[indexMemory] = pointer; indexMemory--; break;
        }
        output += String.fromCharCode(memory[indexMemory-1]);
    }
    console.log(output);
}

translate('ðŸ‘‡ðŸ¤œðŸ‘‡ðŸ‘‡ðŸ‘‡ðŸ‘‡ðŸ‘‡ðŸ‘‡ðŸ‘‡ðŸ‘‰ðŸ‘†ðŸ‘ˆðŸ¤›ðŸ‘‰ðŸ‘‡ðŸ‘ŠðŸ‘‡ðŸ¤œðŸ‘‡ðŸ‘‰ðŸ‘†ðŸ‘†ðŸ‘†ðŸ‘†ðŸ‘†ðŸ‘ˆðŸ¤›ðŸ‘‰ðŸ‘†ðŸ‘†ðŸ‘ŠðŸ‘†ðŸ‘†ðŸ‘†ðŸ‘†ðŸ‘†ðŸ‘†ðŸ‘†ðŸ‘ŠðŸ‘ŠðŸ‘†ðŸ‘†ðŸ‘†ðŸ‘Š');
console.log('DONE');